/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-11-21 01:37:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.sun.rowset.internal.Row;
import java.sql.*;
import java.util.*;

public final class wave_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sun.rowset.internal.Row");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 response.setContentType("text/html; charset=UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	response.setCharacterEncoding("UTF-8");

	//ログアウト検知
	String logout = request.getParameter("logout");
	if(logout != null){
		//セッション変数消去
		session.removeAttribute("session_userID");
		session.removeAttribute("session_user_name");
		session.removeAttribute("session_err");
	}

	//セッションデータ受け取り
	String session_userID = (String)session.getAttribute("session_userID");
	String session_user_name = (String)session.getAttribute("session_user_name");

	//セッション確認
	if(session_userID == null){
		request.setAttribute("session_err", "セッションエラー　Loginページへ遷移します。");
		response.sendRedirect("/HF21/login.html");
	}


	//表示するwaveIDを取得
	String waveID = request.getParameter("waveID");

	//該当waveの情報だけを再取得？
	/* getwave_specific() 名前暫定 */


      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"ja\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width\">\r\n");
      out.write("  <meta name='viewport' content='initial-scale=1, viewport-fit=cover'>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/HF21/css/reset.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/HF21/css/format.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/HF21/css/home.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/HF21/css/scroll.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"/HF21/css/wave.css\">\r\n");
      out.write("\r\n");
      out.write("  <title>Wave</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("  <!-- 画像zoom画面 -->\r\n");
      out.write("  <div id = \"zoomback\">\r\n");
      out.write("    <img id = \"zoomimg\" src = \"/HF21/image/usericon1.jpg\">\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("  <!--- スマートフォン用タブ--->\r\n");
      out.write("  <header class=\"smart-header\">\r\n");
      out.write("    <div id=\"scrollArea\">\r\n");
      out.write("      <div class=\"head\">\r\n");
      out.write("        <a href=\"#\">\r\n");
      out.write("          <img class=\"logo\" src=\"/HF21/image/logo.svg\" alt=\"ロゴ\">\r\n");
      out.write("        </a>\r\n");
      out.write("        <a href=\"post.html\">\r\n");
      out.write("          <img class=\"plus\" src=\"/HF21/image/plus.png\" alt=\"プラス\">\r\n");
      out.write("        </a>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("  </header>\r\n");
      out.write("\r\n");
      out.write("  <!--スマートフォン用メイン -->\r\n");
      out.write("  <main class=\"smart-main\">\r\n");
      out.write("\r\n");
      out.write("    <div class='tab-content main_contents_center'>\r\n");
      out.write("\r\n");
      out.write("      <!--wave中身始まり -->\r\n");
      out.write("      <div class='main_contents'>\r\n");
      out.write("        <!-- userアイコン -->\r\n");
      out.write("        <div class=\"main_contents_image\"><img class=\"main_contents_image\" src=\"/HF21/image/usericon1.jpg\" alt=\"usericon1\"></div>\r\n");
      out.write("        <!-- user情報 -->\r\n");
      out.write("        <div class=\"user_info\">\r\n");
      out.write("          <div class=\"main_contents_user_name\">はるたろう from NH208</div>\r\n");
      out.write("          <div class=\"main_contents_userID\">@haltarou\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- waver認証情報 -->\r\n");
      out.write("        <div class=\"main_contents_certification\">\r\n");
      out.write("          <img class=\"OP_certification\" src=\"/HF21/image/OP-on.jpg\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- waveの文字部分 -->\r\n");
      out.write("        <div class=\"main_contents_contents\">\r\n");
      out.write("          先日、第9回はんだ山車まつりに行ってきました！<br>\r\n");
      out.write("          山車を引っ張る曳き方の掛け声や囃子方の笛の音色を聞きつつ<br>\r\n");
      out.write("          沢山の屋台やキッチンカーでおいしいものを食べては飲んでました！笑<br>\r\n");
      out.write("          山車は全部で31台！全部並ぶと結構迫力！<br>\r\n");
      out.write("          グッズも多数発売されていました～！<br>\r\n");
      out.write("          次回が待ち遠しいですね～。<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("          スクロールテスト用<br>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- waveの画像群 -->\r\n");
      out.write("        <div class=\"main_contents_contents_image\">\r\n");
      out.write("          <div class=\"main_contents_contents_image_box1\">\r\n");
      out.write("            <img src=\"/HF21/image/DSC_0137.JPG\" alt=\"\" class=\"zoom\">\r\n");
      out.write("            <img src=\"/HF21/image/1.JPG\" alt=\"\" class=\"zoom\">\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"main_contents_contents_image_box1\">\r\n");
      out.write("            <img src=\"/HF21/image/2.JPG\" alt=\"\" class=\"zoom\">\r\n");
      out.write("            <img src=\"/HF21/image/usericon1.jpg\" alt=\"\" class=\"zoom\" style=\"display: none;\">\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- 投稿日時 -->\r\n");
      out.write("        <div class=\"main_contents_datetime\">2023-11-07-18:56</div>\r\n");
      out.write("\r\n");
      out.write("        <!-- wave付属情報 -->\r\n");
      out.write("        <div class=\"container-waveinfo\">\r\n");
      out.write("          <div class=\"main_contents_waveinfo\">\r\n");
      out.write("            <img class=\"blockchain-on\" src=\"/HF21/image/chain-on.png\">\r\n");
      out.write("            <div class=\"waveinfo_message\">このWaveはwaveプロトコルで保護されています。</div>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"main_contents_waveinfo\">\r\n");
      out.write("            <img class=\"blockchain-on statusoff\" src=\"/HF21/image/chain-on.png\">\r\n");
      out.write("            <div class=\"waveinfo_message\">このWaveはオリジンWaveではありません。</div>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"main_contents_waveinfo wave_source\">\r\n");
      out.write("            <img class=\"blockchain-on\" src=\"/HF21/image/chain-on.png\">\r\n");
      out.write("            <div class=\"waveinfo_message\">このWaveにはソース記事(外部サイト)があります(クリックで表示)</div>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      </div>\r\n");
      out.write("      <!--wave中身終わり -->\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!--tool_tab始まり -->\r\n");
      out.write("    <div class=\"tool_tab\">\r\n");
      out.write("      <img src=\"/HF21/image/plus.png\" alt=\"\">\r\n");
      out.write("      <img src=\"/HF21/image/plus.png\" alt=\"\">\r\n");
      out.write("      <img src=\"/HF21/image/plus.png\" alt=\"\">\r\n");
      out.write("      <img src=\"/HF21/image/plus.png\" alt=\"\">\r\n");
      out.write("      <img src=\"/HF21/image/plus.png\" alt=\"\">\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/HF21/js/tab.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/HF21/js/scroll.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"/HF21/js/image-big.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  </main>\r\n");
      out.write("  <!--スマートフォン用ボトムメニュー -->\r\n");
      out.write("  <ul class=\"bottom-menu\" id=\"sita_scroll\">\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"/HF21/home.jsp\">\r\n");
      out.write("        <img src=\"/HF21/image/menu1.png\" alt=\"ホーム\"></a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"/HF21/search.html\">\r\n");
      out.write("        <img src=\"/HF21/image/menu2.png\" alt=\"検索\"></a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"/HF21/notice.html\">\r\n");
      out.write("        <img src=\"/HF21/image/menu3.png\" alt=\"通知\"></a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"/HF21/dm.html\">\r\n");
      out.write("        <img src=\"/HF21/image/menu4.png\" alt=\"dm\"></a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("      <a href=\"/HF21/profile.html\">\r\n");
      out.write("        <!-- プロフィール画像がなしの場合menu5.png -->\r\n");
      out.write("        <img src=\"/HF21/image/menu5.png\" alt=\"プロフィール\"></a>\r\n");
      out.write("    </li>\r\n");
      out.write("  </ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
