/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-11-24 01:04:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class discovery_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');

	//Java

      out.write("\r\n");
      out.write("<html lang=\"ja\">\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta charset=\"utf-8\" />\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"width=device-width\" />\r\n");
      out.write("\t\t<meta name=\"viewport\" content=\"initial-scale=1, viewport-fit=cover\" />\r\n");
      out.write("\t\t<title>Discovery</title>\r\n");
      out.write("\t\t<!-- ブラウザ表示favicon -->\r\n");
      out.write("\t\t<link rel=\"icon\" type=\"image/png\" href=\"icon/icon-16x16.png\" sizes=\"16x16\"/>\r\n");
      out.write("\t\t<!-- iphone表示favicon -->\r\n");
      out.write("\t\t<link rel=\"apple-touch-icon\" href=\"icon/apple-touch-icon.png\" sizes=\"180x180\"/>\r\n");
      out.write("\t\t<!-- CSS -->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/discovery/reset.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/discovery/format.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/discovery/discovery.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/discovery/tab.css\" />\r\n");
      out.write("\t\t<!-- Slick.jsのCSS -->\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css\" />\r\n");
      out.write("\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"css/discovery/slick_my.css\" />\r\n");
      out.write("\t\t<!-- Slick.jsのJS -->\r\n");
      out.write("\t\t<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\r\n");
      out.write("\t</head>\r\n");
      out.write("\r\n");
      out.write("\t<body>\r\n");
      out.write("\r\n");
      out.write("\t\t<!--- スマートフォン用タブ--->\r\n");
      out.write("\t\t<header class=\"smart-header\">\r\n");
      out.write("\t\t\t<div class=\"head\">\r\n");
      out.write("\t\t\t\t<form method=\"get\" action=\"results.html\" class=\"search\">\r\n");
      out.write("\t\t\t\t\t<label><input type=\"text\" placeholder=\"気になるワード\" /></label>\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\" aria-label=\"検索\"></button>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"tabs\">\r\n");
      out.write("\t\t\t\t<div class=\"tab-buttons\">\r\n");
      out.write("\t\t\t\t\t<span class=\"content1\" onclick=\"reload()\">画像</span>\r\n");
      out.write("\t\t\t\t\t<span class=\"content2\">文字</span>\r\n");
      out.write("\t\t\t\t\t<div id=\"lamp\" class=\"content1\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\r\n");
      out.write("\t\t<!--スマートフォン用メイン -->\r\n");
      out.write("\t\t<main class=\"smart-main\">\r\n");
      out.write("\t\t\t<div class=\"tab-content\">\r\n");
      out.write("\t\t\t\t<!--写真+文字 -->\r\n");
      out.write("\t\t\t\t<div class=\"content1\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"slider-5\" id=\"js-slider-5\">\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"image/test_image/img_11.jpg\" alt=\"\" /></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"image/test_image/img_01.jpg\" alt=\"\" /></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"image/test_image/img_22.jpg\" alt=\"\" /></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"image/test_image/img_02.jpg\" alt=\"\" /></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"image/test_image/img_33.jpg\" alt=\"\" /></li>\r\n");
      out.write("\t\t\t\t\t\t<li><img src=\"image/test_image/img_03.jpg\" alt=\"\" /></li>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t<div class=\"dots-5\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"content2\">\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample1</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample2</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample3</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample4</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample5</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample6</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample7</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample8</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample9</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample10</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample11</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample12</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample13</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample14</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample15</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample16</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample17</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample18</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample19</a></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"post swipe-item\"><a href=\"wave.html\">sample20</a></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- JS -->\r\n");
      out.write("\t\t\t<script src=\"js/discovery/discovery.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"js/discovery/tab.js\"></script>\r\n");
      out.write("\t\t\t<!-- Slick.jsのJS -->\r\n");
      out.write("\t\t\t<script src=\"https://cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js\"></script>\r\n");
      out.write("\t\t\t<script src=\"js/discovery/slick_my.js\"></script>\r\n");
      out.write("\t\t\t<!-- スライド削除のJS -->\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\tvar tsJqSwipeX = -1;\r\n");
      out.write("\t\t\t\tvar tsJqSwipeY = -1;\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$(function () {\r\n");
      out.write("\t\t\t\t\t// スワイプ処理\r\n");
      out.write("\t\t\t\t\t$(\".swipe-item\").bind(\"touchstart\", function () {\r\n");
      out.write("\t\t\t\t\t\ttsJqSwipeX = event.changedTouches[0].pageX;\r\n");
      out.write("\t\t\t\t\t\ttsJqSwipeY = event.changedTouches[0].pageY;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t$(\".swipe-item\").bind(\"touchend\", function () {\r\n");
      out.write("\t\t\t\t\t\ttsJqSwipeX = -1;\r\n");
      out.write("\t\t\t\t\t\tflag = 0;\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t$(\".swipe-item\").bind(\"touchmove\", function () {\r\n");
      out.write("\t\t\t\t\t\tif (Math.abs(event.changedTouches[0].pageY - tsJqSwipeY) > 10)\r\n");
      out.write("\t\t\t\t\t\t\ttsJqSwipeX = -1;\r\n");
      out.write("\t\t\t\t\t\tif (\r\n");
      out.write("\t\t\t\t\t\t\ttsJqSwipeX != -1 &&\r\n");
      out.write("\t\t\t\t\t\t\tMath.abs(event.changedTouches[0].pageX - tsJqSwipeX) > 35\r\n");
      out.write("\t\t\t\t\t\t) {\r\n");
      out.write("\t\t\t\t\t\t\ttsJqSwipeX = -1;\r\n");
      out.write("\t\t\t\t\t\t\t// スワイプられた時の処理\r\n");
      out.write("\t\t\t\t\t\t\t$(this).css(\"background-color\", \"#cd0000\");\r\n");
      out.write("\t\t\t\t\t\t\t$(this).slideUp(\"slow\");\r\n");
      out.write("\t\t\t\t\t\t\t/*投稿の追加を記入*/\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t</main>\r\n");
      out.write("\r\n");
      out.write("\t\t<!--スマートフォン用ボトムメニュー -->\r\n");
      out.write("\t\t<ul class=\"bottom-menu\">\r\n");
      out.write("\t\t\t<li><a href=\"home.html\"> <img src=\"image/menu1.png\" alt=\"ホーム\" /></a></li>\r\n");
      out.write("\t\t\t<li><a href=\"search.html\"> <img src=\"image/menu2.png\" alt=\"検索\" /></a></li>\r\n");
      out.write("\t\t\t<li><a href=\"notice.html\"> <img src=\"image/menu3.png\" alt=\"通知\" /></a></li>\r\n");
      out.write("\t\t\t<li><a href=\"dm.html\"> <img src=\"image/menu4.png\" alt=\"dm\" /></a></li>\r\n");
      out.write("\t\t\t<!-- プロフィール画像がなしの場合menu5.png -->\r\n");
      out.write("\t\t\t<li><a href=\"profile.html\"><img src=\"image/menu5.png\" alt=\"プロフィール\"/></a></li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
