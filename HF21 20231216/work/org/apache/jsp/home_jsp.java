/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-12-11 04:47:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import wave.Get_allwave;
import com.sun.rowset.internal.Row;
import java.sql.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.HttpServletResponse;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sun.rowset.internal.Row");
    _jspx_imports_classes.add("wave.Get_allwave");
    _jspx_imports_classes.add("javax.servlet.http.HttpServletResponse");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	response.setCharacterEncoding("UTF-8");

	//ログアウト検知
	String logout = request.getParameter("logout");
	if(logout != null){
		//セッション変数消去
		session.removeAttribute("session_userID");
		session.removeAttribute("session_user_name");
		session.removeAttribute("session_err");
	}

	//セッションデータ受け取り
	String session_userID = (String)session.getAttribute("session_userID");
	String session_user_name = (String)session.getAttribute("session_username");
	String usericon = (String)session.getAttribute("session_usericon");

	//セッション確認
	if(session_userID == null){
		System.out.println(session_userID + "aa");
		response.sendRedirect("/HF21/login.html");
	}else{
		System.out.println(session_userID + "bb");
	}

	//userinfo取得
	//Get_userinfo get_userinfo = new Get_userinfo();
	//ArrayList usertbl = get_userinfo.get_userinfo_oneuser(session_userID);
	//ArrayList userrow = (ArrayList)usertbl.get(0);

  	//wave取得
  	Get_allwave newwave = new Get_allwave();
  	//ArrayList wavetbl = newwave.get_allwave_oneuser(session_userID);

  	//json作成メソッド発動
  	newwave.get_wave_manyuser();

	//timesago計算用クラス呼び出し
	//Caltime cal = new Caltime();
	String result = "";



      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"ja\">\r\n");
      out.write("\r\n");
      out.write("  <head>\r\n");
      out.write("\t<style>\r\n");
      out.write("        .loading{\r\n");
      out.write("            display:flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("        }\r\n");
      out.write("        .loading:before {\r\n");
      out.write("            content: '読み込み中 ...';\r\n");
      out.write("        }\r\n");
      out.write("\t</style>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width\">\r\n");
      out.write("    <meta name='viewport' content='initial-scale=1, \tviewport-fit=cover'>\r\n");
      out.write("\r\n");
      out.write("    <title>Wave home</title>\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/reset.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/format.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/home.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/scroll.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"css/hamburger.css\">\r\n");
      out.write("  </head>\r\n");
      out.write("<!--- スマートフォン用タブ-->\r\n");
      out.write("\t<header class=\"smart-header\">\r\n");
      out.write("    <div id=\"scrollArea\">\r\n");
      out.write("    <div class=\"head\">\r\n");
      out.write("    \t<div class=\"cp_cont\">\r\n");
      out.write("\t\t\t<div class=\"cp_offcm04\">\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" id=\"cp_toggle04\" OnClick=\"btnCtr()\">\r\n");
      out.write("\t\t\t\t<label for=\"cp_toggle04\" ><img src=\"");
      out.print(usericon );
      out.write("\" alt=\"menu-icon\" class=\"hdrprfile\"></label>\r\n");
      out.write("\t\t\t\t<div class=\"cp_menu\" class=\"hamburger-demo-switch hamburger-demo-switch1\">\r\n");
      out.write("\t\t\t\t\t<ul class=\"hammenu\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"hsp12p\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"picture\"><img class=\"maru\" src=\"");
      out.print(usericon );
      out.write("\" alt=\"picture\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"createacc\">新しいアカウントを作成</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"hsp12p\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"username\">");
      out.print(session_user_name );
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"userid\">@");
      out.print(session_userID );
      out.write("</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"hsp36p\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"sepline1\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"menus\">プロフィール</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"menus\">3フォロー</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"menus\">3フォロワー</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"menus\">お気に入り</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"sepline2\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"menus\">設定</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"menus\">テーマの設定</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"lastmenus\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"logout\">ログアウト</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"switch\">アカウントを切替</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"hsp6p\"></div>\r\n");
      out.write("\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"hamburger-demo-cover\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<a href=\"#\">\r\n");
      out.write("\t\t    <img class=\"logo\" src=\"image/logo.svg\" alt=\"ロゴ\">\r\n");
      out.write("\t\t </a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<div class='tabs'>\r\n");
      out.write("\t\t  <div class='tab-buttons'>\r\n");
      out.write("\t\t    <span class='content1' id=\"contents1\">おすすめ</span>\r\n");
      out.write("\t\t    <span class='content2' id=\"contents2\">フォロー中</span>\r\n");
      out.write("\t\t    <div id='lamp' class='content1'></div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</header>\r\n");
      out.write("\r\n");
      out.write("  <body>\r\n");
      out.write("\r\n");
      out.write("  <!--スマートフォン用メイン -->\r\n");
      out.write("  <main class=\"smart-main\" id=\"smart-main\">\r\n");
      out.write("\r\n");
      out.write("  <div class='tab-content'>\r\n");
      out.write("    <!--おすすめ -->\r\n");
      out.write("    <div id='content1'>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <div id='content2'>\r\n");
      out.write("\t\t<div   id=\"post\">\r\n");
      out.write("\t\t\t<div class=\"hsp12p\"></div>\r\n");
      out.write("\t\t\t<div class=\"xyz\">\r\n");
      out.write("\t\t\t\t<div class=\"picture\"><img class=\"maru\" src=\"image/susuru.jpg\" alt=\"picture\"></div>\r\n");
      out.write("\t\t\t\t<div class=\"y\">\r\n");
      out.write("\t\t\t\t\t<div class=\"z\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"username\">鉄火巻＠委員長</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"userid\">@TekkaMaki_0141</div>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"timesago\">·4時間</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"hsp3p\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"maincontent\">\r\n");
      out.write("\t\t\t\t\t\tこちらが 濃厚とんこつ豚無双さんの<br>\r\n");
      out.write("\t\t\t\t\t\t濃厚無双ラーメン 海苔トッピングです<br>\r\n");
      out.write("\t\t\t\t\t\tうっひょ～～～～～～！<br>\r\n");
      out.write("\t\t\t\t\t\t着席時 コップに水垢が付いていたのを見て<br>\r\n");
      out.write("\t\t\t\t\t\t大きな声を出したら 店主さんからの誠意で<br>\r\n");
      out.write("\t\t\t\t\t\tチャーシューをサービスしてもらいました<br>\r\n");
      out.write("\t\t\t\t\t\t俺の動画次第でこの店潰す事だってできるんだぞって事で<br>\r\n");
      out.write("\t\t\t\t\t\tいただきま～～～～す！まずはスープから<br>\r\n");
      out.write("\t\t\t\t\t\tコラ～！<br>\r\n");
      out.write("\t\t\t\t\t\tこれでもかって位ドロドロの濃厚スープの中には<br>\r\n");
      out.write("\t\t\t\t\t\t虫が入っており 怒りのあまり<br>\r\n");
      out.write("\t\t\t\t\t\t卓上調味料を全部倒してしまいました～！<br>\r\n");
      out.write("\t\t\t\t\t\tすっかり店側も立場を弁え 誠意のチャーシュー丼を貰った所で<br>\r\n");
      out.write("\t\t\t\t\t\tお次に 圧倒的存在感の極太麺を<br>\r\n");
      out.write("\t\t\t\t\t\t啜る～！ 殺すぞ～！<br>\r\n");
      out.write("\t\t\t\t\t\tワシワシとした食感の麺の中には、髪の毛が入っており<br>\r\n");
      out.write("\t\t\t\t\t\tさすがのSUSURUも 厨房に入って行ってしまいました～！<br>\r\n");
      out.write("\t\t\t\t\t\tちなみに、店主さんが土下座している様子は ぜひサブチャンネルをご覧ください\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"hsp3p\"></div>\r\n");
      out.write("\t\t\t\t\t<div class=\"hasamu\"><div class=\"icons\">💭</div><div class=\"icons\">♡</div><div class=\"icons\">◯</div><div class=\"icons\">□</div><div class=\"icons\">…</div></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"hsp6p\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("  <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"js/tab.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"js/scroll.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"js/hamburger.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"js/fetch.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"js/infinite.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  </main>\r\n");
      out.write("    <!--スマートフォン用ボトムメニュー -->\r\n");
      out.write("<ul class=\"bottom-menu\" id=\"bottom-menu\">\r\n");
      out.write("    <li>\r\n");
      out.write("        <a href=\"/HF21/home.jsp\">\r\n");
      out.write("        \t<img src=\"image/menu1.png\" alt=\"ホーム\">\r\n");
      out.write("\t\t</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("        <a href=\"/HF21/Discovery.html\">\r\n");
      out.write("        \t<img src=\"image/menu2.png\" alt=\"検索\">\r\n");
      out.write("\t\t</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("        <a href=\"/HF21/post.jsp\">\r\n");
      out.write("        \t<img src=\"image/plus.png\" alt=\"投稿\">\r\n");
      out.write("\t\t</a>\r\n");
      out.write("    </li>\r\n");
      out.write("    <li>\r\n");
      out.write("        <a href=\"notice.html\">\r\n");
      out.write("        \t<img src=\"image/menu3.png\" alt=\"通知\">\r\n");
      out.write("\t\t</a>\r\n");
      out.write("    </li>\r\n");
      out.write("     <li>\r\n");
      out.write("         <a href=\"dm.jsp\">\r\n");
      out.write("             <img src=\"image/menu4.png\" alt=\"dm\">\r\n");
      out.write("         </a>\r\n");
      out.write("     </li>\r\n");
      out.write("</ul>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  </body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
